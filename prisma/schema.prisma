// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @unique // matches kind
  email String @unique

  File File[]
  prefersPrivateUpload Boolean @default(false)

  Message Message[]

  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

enum UploadStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}

model File {
  id String @id @default(uuid())
  name String

  messages Message[]

  uploadStatus UploadStatus @default(PENDING)
  url String
  key String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id])
  userId String?
  private Boolean @default(false)
}

model Message {
  id   String @id @default(cuid())
  text String @db.Text()

  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  File      File?    @relation(fields: [fileId], references: [id])
  fileId    String?
}